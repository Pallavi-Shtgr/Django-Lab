Module-4: 
1. For studentsâ€™ enrolment developed in Module 2, create a generic class view which displays list 
of students and detail view that displays student details for any selected student in the list. 
django-admin startproject project4a 
cd project4a 
python manage.py startapp app4a 
code . 
=================================== 
====================================== 
#project4a/settings.py 
# Application definition 
INSTALLED_APPS = [ 
'django.contrib.admin', 
'django.contrib.auth', 
'django.contrib.contenttypes', 
'django.contrib.sessions', 
'django.contrib.messages', 
'django.contrib.staticfiles', 
'app4a', 
] 
===================================== 
================================== 
#app4a/urls.py 
# urls.py 
from django.urls import path 
from .views import StudentListView, StudentDetailView 
urlpatterns = [ 
path('app4a/', StudentListView.as_view(), name='student-list'), 
path('app4a/<int:pk>/', StudentDetailView.as_view(), name='student-detail'), 
] 
======================================== 
===================================== 
#app4a/views.py 
# views.py 
from django.views.generic import ListView, DetailView 
from .models import Student, Enrollment 
class StudentListView(ListView): 
model = Student 
template_name = 'app4a/student_list.html'  # Adjust to your template path 
context_object_name = 'students' 
class StudentDetailView(DetailView): 
model = Student 
template_name = 'app4a/student_detail.html'  # Adjust to your template path 
context_object_name = 'student' 
def get_context_data(self, **kwargs): 
context = super().get_context_data(**kwargs) 
context['enrollments'] = Enrollment.objects.filter(student=self.object) 
return context 
==================================== 
===================================== 
#app4a/admin.py 
# admin.py 
from django.contrib import admin 
from .models import Student, Course, Enrollment 
admin.site.register(Student) 
admin.site.register(Course) 
admin.site.register(Enrollment)

==================================== 
===================================== 
#app4a/forms.py 
==================================== 
===================================== 
#app4a/models.py 
from django.db import models 
class Course(models.Model): 
name = models.CharField(max_length=100) 
description = models.TextField() 
def __str__(self): 
return self.name 
class Student(models.Model): 
first_name = models.CharField(max_length=50) 
last_name = models.CharField(max_length=50) 
email = models.EmailField() 
def __str__(self): 
return f'{self.first_name} {self.last_name}' 
class Enrollment(models.Model): 
student = models.ForeignKey(Student, on_delete=models.CASCADE) 
course = models.ForeignKey(Course, on_delete=models.CASCADE) 
enrollment_date = models.DateField(auto_now_add=True)
def __str__(self): 
return f'{self.student} enrolled in {self.course}' 
==================================== 
===================================== 
#app4a/templates/app4a/student_detail.html 
{% extends "base_generic.html" %} 
{% block content %} 
<h2>Student Details</h2> 
<p>First name: {{ student.first_name }}</p> 
<p>Last name: {{ student.last_name }}</p> 
<p>Email: {{ student.email }}</p> 
<h3>Enrollments</h3> 
<ul> 
{% for enrollment in enrollments %} 
<li>{{ enrollment.course.name }} (Enrolled on: {{ enrollment.enrollment_date }})</li> 
{% endfor %} 
</ul> 
{% endblock %} 
==================================== 
===================================== 
#app4a/templates/app4a/student_list.html 
{% extends "base_generic.html" %} 
{% block content %} 
<h2>Student List</h2>
<ul> 
{% for student in students %} 
<li> 
<a href="{% url 'student-detail' student.pk %}"> 
{{ student.first_name }} {{ student.last_name }} 
</a> 
</li> 
{% endfor %} 
</ul> 
{% endblock %} 
==================================== 
===================================== 
#app4a/templates/base_generic.html 
<!DOCTYPE html> 
<html> 
<head> 
<title>{% block title %}My Site{% endblock %}</title> 
</head> 
<body> 
<header> 
<h1>My Site</h1> 
</header> 
<nav> 
<ul> 
<li><a href="/">Home</a></li> 
<!-- Add more links here --> 
</ul> 
</nav>
